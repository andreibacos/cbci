---
- hosts: win2016-cinder
  vars_files: 
    - zuul-params.yaml
    - group_vars/windows

  tasks:
    # Run sanity checks as early as possible
    - include: tasks/windows/sanity-checks.yaml

    - name: Include additional variables based on job_type
      include_vars: "group_vars/win2016-cinder-{{ job_type }}"
      tags: always

    - name: Configure hostname
      win_shell: (Rename-Computer -NewName "{{ hostname }}" -passthru).hassucceeded
      when: hostname is defined and ansible_hostname != hostname|upper
      register: change_hostname
      failed_when: False
      tags: set-hostname

    - name: Reboot after hostname change if necessary
      win_reboot:
      when: (change_hostname.skipped is defined and not change_hostname.skipped) or
            (change_hostname.changed is defined and change_hostname.changed)
      tags: set-hostname

    - name: Create services and/or stop them if they are running
      win_service:
        name: "{{ item.name }}"
        display_name: "{{ item.name }}"
        description: "{{ item.description}}"
        state: stopped
        start_mode: manual
        path: "{{ win_dir.bin }}\\OpenStackService.exe {{ item.name }} {{ item.binary }} --config-file {{ item.config }}"
      with_items: "{{ services }}"
      tags: create-services
   
    - include: tasks/windows/create-folders.yaml
    - include: tasks/windows/install-utils.yaml
    - include: tasks/windows/install-python.yaml
    - include: tasks/windows/install-pip.yaml
    - include: tasks/windows/configure-pip-index.yaml
    - include: tasks/windows/install-git.yaml
    - include: tasks/windows/install-vcredist.yaml
    - include: tasks/windows/install-zuul.yaml
    - include: tasks/windows/prepare-git-repos.yaml
    
    - name: Update setuptools
      win_shell: "pip install -c {{ win_dir.build }}\\requirements\\upper-constraints.txt -U setuptools"

    - name: Install pymysql
      win_shell: "pip install -c {{ win_dir.build }}\\requirements\\upper-constraints.txt -U pymysql"
    
    - include: tasks/windows/install-project.yaml
      with_items: "{{ git_prep_projects }}"
      tags:  install-project
    
    - name: Create config files
      win_template:
        src: "windows/{{ item }}"
        dest: "{{ win_dir.etc }}\\{{ item }}"
      with_items:
        - cinder.conf
      tags: create-configs

    - name: Install FS-iSCSITarget-Server
      win_feature:
        name: FS-iSCSITarget-Server
        state: present
      when: job_type == "iscsi"

    - name: Start iscsi service
      win_service:
        name: msiscsi
        state: started
        start_mode: auto
