---
- hosts: 127.0.0.1
  connection: local
  vars_files:
    - zuul-params.yaml

  tasks:
    - name: Include variables from job_vars/{{ zuul_project | basename }}
      include_vars: "job_vars/{{ zuul_project | basename }}"
      failed_when: False
      tags: always

    - name: Include variables from job_vars/{{ zuul_project | basename }}-{{ job_type }}
      include_vars: "job_vars/{{ zuul_project | basename }}-{{ job_type }}"
      failed_when: False
      tags: always

    - name: Include variables from job_vars/{{ zuul_project | basename }}-{{ job_type }}-{{ network_type }}
      include_vars: "job_vars/{{ zuul_project | basename }}-{{ job_type }}-{{ network_type }}"
      failed_when: False
      when: network_type is defined
      tags: always
      
    - name: Configure compute node trunk
      include_tasks: tasks/configure-compute-trunk.yaml
      with_items: "{{ groups['all'] }}"

- hosts: win2016-cinder
  vars_files:
    - zuul-params.yaml
    - group_vars/windows

  tasks:
    - name: Include additional variables based on job_type
      include_vars: "group_vars/win2016-cinder-{{ job_type }}" 
      when: job_type is defined
      tags: always

    - name: Include additional variables based on job_type and network_type
      include_vars: "group_vars/win2016-cinder-{{ job_type }}-{{ network_type }}"
      when: network_type is defined
      tags: always
      
    - include: tasks/windows/join-ad.yaml
      when: join_ad is defined and join_ad

    - include: tasks/windows/configure-smbshare.yaml
      when: smbshare is defined

    - name: Configure services with AD user
      set_fact:
        service_username: "administrator@{{ ad_domain }}"
      when: join_ad is defined and join_ad

    - name: Configure services with local user
      set_fact:
        service_username: "administrator"
      when: join_ad is not defined or not join_ad

    - name: Start services
      win_service:
        name: "{{ item.name }}"
        display_name: "{{ item.name }}"
        description: "{{ item.description }}"
        username: "{{ service_username }}"
        password: "{{ ansible_ssh_pass }}"
        state: restarted
        start_mode: auto
        path: "{{ win_dir.bin }}\\OpenStackService.exe {{ item.name }} {{ item.binary }} --config-file {{ item.config }}"
      with_items: "{{ services }}"
      tags: start-services


- hosts: win2016-compute
  vars_files:
    - zuul-params.yaml
    - group_vars/windows

  tasks:
    - name: Include additional variables based on project
      include_vars: "group_vars/win2016-compute-{{ zuul_project | basename }}"
      failed_when: False 
      tags: always

    - name: Include additional variables based on project job_type
      include_vars: "group_vars/win2016-compute-{{ zuul_project | basename }}-{{ job_type }}"
      when: job_type is defined
      failed_when: False
      tags: always

    - include: tasks/windows/join-ad.yaml
      when: join_ad is defined and join_ad

    - include: tasks/windows/configure-smbshare.yaml
      when: smbshare is defined

    - include: tasks/windows/enable-live-migration.yaml
      when: join_ad is defined and join_ad

    - name: Set neutron hyperv agent service
      set_fact: services={{ services + neutron_hyperv_agent }}
      when: network_type == "hyperv"

    - name: Set neutron ovs agent service
      set_fact: services={{ services + neutron_ovs_agent }}
      when: network_type == "ovs"

    - name: Configure services with AD user
      set_fact:
        service_username: "administrator@{{ ad_domain }}"
        service_password: "{{ ansible_ssh_pass }}"
      when: join_ad is defined and join_ad

    - name: Configure services with local user
      set_fact:
        service_username: "LocalSystem"
        service_password: ""
      when: join_ad is not defined or not join_ad
 
    - name: Start services
      win_service:
        name: "{{ item.name }}"
        display_name: "{{ item.name }}"
        description: "{{ item.description }}"
        username: "{{ service_username }}"
        password: "{{ service_password }}"
        state: started
        start_mode: auto
        path: "{{ win_dir.bin }}\\OpenStackService.exe {{ item.name }} {{ item.binary }} --config-file {{ item.config }}"
      with_items: "{{ services }}"
      tags: start-services

- hosts: devstack
  vars_files: 
    - zuul-params.yaml

  tasks:
    - name: Include variables from group_vars/devstack-{{ zuul_project | basename }}
      include_vars: "group_vars/devstack-{{ zuul_project | basename }}"
      failed_when: False
      tags: always 

    - name: Include job_type specific variables
      include_vars: "group_vars/devstack-{{ zuul_project | basename }}-{{ job_type }}"
      when: job_type is defined
      failed_when: False
      tags: always

    - include: tasks/devstack/check-devstack-nova-services.yaml
    - include: tasks/devstack/check-devstack-neutron-services.yaml
    - include: tasks/devstack/check-devstack-cinder-services.yaml
      when: zuul_project == "openstack/cinder" or zuul_project == "openstack/os-brick"

    - include: tasks/devstack/discover-hosts.yaml

    - name: Restart nova api
      service:
        name: devstack@n-api
        state: restarted
      become: True

    - name: Create folder {{ devstack_dir.home }}/tempest
      file:
        path: "{{ devstack_dir.home }}/tempest"
        state: directory
        mode: 0755
      tags: run-tests

    - name: Write test list files under {{ devstack_dir.home }}
      copy:
        content: "{{ item.value }}"
        dest: "{{ devstack_dir.home }}/{{ item.key }}.txt"
      with_dict: "{{ tempest_tests }}"
      tags: run-tests

    - name: Upload run-tests.sh
      copy:
        src: files/run-tests.sh
        dest: "{{ devstack_dir.home }}/run-tests.sh"
        mode: 0755
      tags: run-tests

    - name: Run post stack bash script
      shell: "{{ post_stack_bash }}"
      args:
        executable: /bin/bash
      tags: post-stack-bash

    - name: Run tests
      shell: |
        {{ devstack_dir.home }}/run-tests.sh \
        --included-tests {{ devstack_dir.home }}/included-tests.txt \
        --excluded-tests {{ devstack_dir.home }}/excluded-tests.txt \
        --isolated-tests {{ devstack_dir.home }}/isolated-tests.txt \
        > {{ devstack_dir.home }}/tempest/run-tests.sh.log
      register: tempest_result
      when: run_tests is not defined or run_tests
      tags: run-tests
