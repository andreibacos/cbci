- hosts: 127.0.0.1
  connection: local
  vars_files: 
    - zuul-params.yaml

  tasks:

    - name: Include variables from job_vars/{{ zuul_project | basename }}
      include_vars: "job_vars/{{ zuul_project | basename }}"
      failed_when: False
      tags: always

    - name: Include variables from job_vars/{{ zuul_project | basename }}-{{ job_type }}
      include_vars: "job_vars/{{ zuul_project | basename }}-{{ job_type }}"
      failed_when: False
      tags: always

    - name: Include variables from group_vars/devstack-{{ zuul_project | basename }}-{{ network_type }}
      include_vars: "group_vars/devstack-{{ zuul_project | basename }}-{{ network_type }}"
      failed_when: False
      when: network_type is defined and job_type is not defined
      tags: always

    - name: Include variables from job_vars/{{ zuul_project | basename }}-{{ job_type }}-{{ network_type }}
      include_vars: "job_vars/{{ zuul_project | basename }}-{{ job_type }}-{{ network_type }}"
      failed_when: False
      when: network_type is defined
      tags: always

    - name: Copy build files to log folder
      copy: 
        src: "{{ item }}"
        dest: "{{ log_path }}"
      with_fileglob:
        - "{{ work_dir }}/*.log"
      failed_when: False

    - name: Copy jenkins console log
      copy: 
        src: "{{ console_log }}"
        dest: "{{ log_path }}/jenkins-console.log"
      failed_when: False

    - name: Archive all files in {{ log_path }}
      shell: |
        for file in $(find "{{ log_path }}" -type f)
        do 
            gzip $file
        done
      failed_when: False

    - name: Set log destination for debug job
      set_fact: log_dst="/srv/logs/debug/{{ zuul_project | basename }}/{{ zuul_change }}/{{ zuul_patchset }}/{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S') }}"
      when: debug_job is defined and debug_job and job_type is not defined
      
    - name: Set log destination for debug job with job_type
      set_fact: log_dst="/srv/logs/debug/{{ zuul_project | basename }}/{{ zuul_change }}/{{ zuul_patchset }}/{{ job_type }}/{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S') }}"
      when: debug_job is defined and debug_job and job_type is defined

    - name: Set log destination for debug job with job_type and network_type
      set_fact: log_dst="/srv/logs/debug/{{ zuul_project | basename }}/{{ zuul_change }}/{{ zuul_patchset }}/{{ job_type }}/{{ network_type }}/{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S') }}"
      when: debug_job is defined and debug_job and job_type is defined and network_type is defined

    - name: Set log destination for normal job
      set_fact: log_dst="/srv/logs/{{ zuul_project | basename }}/{{ zuul_change }}/{{ zuul_patchset }}"
      when: (debug_job is not defined or not debug_job) and job_type is not defined

    - name: Set log destination for normal job with job_type
      set_fact: log_dst="/srv/logs/{{ zuul_project | basename }}/{{ zuul_change }}/{{ zuul_patchset }}/{{ job_type }}"
      when: (debug_job is not defined or not debug_job) and job_type is defined

    - name: Set log destination for normal job with job_type and network_type
      set_fact: log_dst="/srv/logs/{{ zuul_project | basename }}/{{ zuul_change }}/{{ zuul_patchset }}/{{ job_type }}/{{ network_type }}"
      when: (debug_job is not defined or not debug_job) and job_type is defined and network_type is defined
      
    - name: Make sure log server folder is empty
      shell: |
        ssh cloudbase@cloudbase-ci.com -i "{{ log_key }}" "if [ -d {{ log_dst }} ];then rm -rf {{ log_dst }};fi; mkdir -p {{ log_dst }}"

    - name: Upload logs
      shell: |
        rsync -av -e "ssh -i {{ log_key }}" "{{ log_path }}/" "cloudbase@cloudbase-ci.com:{{ log_dst }}"
        
    - file: state=absent path="{{ log_path }}"

